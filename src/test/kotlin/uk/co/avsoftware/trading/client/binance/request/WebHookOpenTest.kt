package uk.co.avsoftware.trading.client.binance.request

import com.fasterxml.jackson.databind.ObjectMapper
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test
import org.springframework.mock.web.reactive.function.server.MockServerRequest
import org.springframework.web.reactive.function.server.ServerRequest
import reactor.core.publisher.Mono
import java.time.Duration

class WebHookOpenTest {

    @Test
    fun testFromJson(){

        val openRequest: WebHookOpenRequest = ObjectMapper().readValue(OPEN_JSON, WebHookOpenRequest::class.java)

        val serverRequest: ServerRequest = MockServerRequest.builder().body(Mono.just(openRequest))

        val sut = WebHookOpenRequest.from(serverRequest).block(Duration.ofSeconds(1))

        assertThat(sut?.symbol).isEqualTo("BTCUSDT")
        assertThat(sut?.price).isEqualTo("125")
        assertThat(sut?.newClientOrderId).isEqualTo("btc-order-1")
    }

    companion object {
        const val OPEN_JSON = """{
  "symbol": "BTCUSDT",
  "side": "BUY",
  "type": "MARKET",
  "timeInForce": "GTC",
  "quantity": 128.005,
  "price": 125,
  "newClientOrderId": "btc-order-1"
}"""
    }
}